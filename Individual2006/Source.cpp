#include <iostream>

/*
Переменная - это ИМЕНОВАННАЯ область оперативной памяти,которая хранит данные,
которые могут изменяться в процессе работы программы. И характеризуется типом.
Константа - это ИМЕНОВАННАЯ область оперативной памяти,которая хранит данные,
которые НЕ могут изменяться в процессе работы программы (постоянные данные). 
И характеризуется типом.
Тип данных - это характеристика, которая показывает 
1) сколько байт будет выделено под переменную или константу в оперативной памяти, 
2) какие данные можно будет хранить,
3) какие операции можно будет производить
Типы данных бывают:

1) Целочисленные 
short - 2 байта, 
int - (2-4 байта - в зависимости от архитектуры системы не меньше чем short не больше long), 
long - 4 байта, 
long long - 8 байт 

1 байта - 8 бит
2) Логические - bool - 1 байт (true-1/false-0)
3) Символьные char 1 байт 
4) Вещественные (с плавающей точкой) float-4 байта, double - 8 байт
5) void
6) enum

Массив - это совокурность ОДНОТИПНЫХ переменных или констант, которые имеют
одно имя, расположены в оперативной памяти строго ПОСЛЕДОВАТЕЛЬНО.
Благодаря последовательному расположению элементов в памяти появляется понятие индекса\
Индекс - это СМЕЩЕНИЕ относительно начала массива. Индексация массива
начинается с 0.
Какую проблему решает массив?
1) не нужно придумывать много имён для переменных или констант
2) Благодаря индексам можно применить к элементам массива переборный цикл

Функция - это именнованый блок кода, к которому можно обратиться
из любого места программы
Какую проблему решает функция?
С логической точки зрения - функция позволяет выполнить алгоритмическую
декомпозицию
То есть разбить задачу на подзадачи
С технической точки зрения - функция позволяет написать код 1 раз
и потом его вызывать там, где это необходимо (переиспользовать
готовый код)
*/

void showArray(int arr[], int size)
{
	for (int i = 0; i < size; i++)
	{
		std::cout << arr[i] << " * ";
	}
	std::cout << std::endl;
}

int getMaxElement(int arr[], int size)
{
	int max = arr[0];
	for (int i = 1; i < size; i++)
	{
		if (arr[i] > max)
			max = arr[i];
	}
	return max;
}

int main()
{
	/*
	* Декомпозиция - это разбиение задачи на подзадачи
	* и оформление каждой задачи в виде функции
	1) сформировать массив цен
	2) распечатка массива цен в консоль
	3) нахождение минимума
	4) нахождение максимума
	5) сортировка массива
	*/
	int prices[5] = { 4,5,67,5,6 };
	std:: cout << getMaxElement(prices, 5);
	std::cout << std::endl;
	/*float prices[5];
	prices[0] = 4;
	prices[1] = 5;
	prices[2] = 67;
	prices[3] = 5;
	prices[4] = 6;*/
	showArray(prices, 5);

	int countProducts[5] = { 100,300,100,400,200 };
	showArray(countProducts, 5);

	return 0;
}